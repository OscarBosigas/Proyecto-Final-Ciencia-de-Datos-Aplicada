declare type Position = 'BEFORE' | 'SELECTED' | 'AFTER';
/**
 * @description
 * A nonempty list that will always have one element selected
 *
 * **NOTE**
 * For size and performance reasons, the public properties are not
 * truly immutable, meaning they _can_ be reassigned, but doing so
 * will result in unexpected behavior due to mutations made to
 * internal state. Please treat them as readonly â€” as intended
 */
declare class SelectListImpl<a> {
    /**
     * @description
     * The currently selected element
     */
    readonly selected: a;
    /**
     * @description
     * The elements currently in the `before` section of the `SelectList`
     */
    readonly before: a[];
    /**
     * @description
     * The elements currently in the `after` section of the `SelectList`
     */
    readonly after: a[];
    /**
     * @description
     * The size of the entire collection
     */
    readonly size: number;
    constructor(before: a[], selected: a, after: a[]);
    /**
     * @description
     * Shift the selected element to the first element which passes
     * the provided predicate function. If no element is found, the
     * `SelectList` will not be changed
     */
    select(predicateFn: (element: a) => boolean): SelectListImpl<a>;
    /**
     * @description
     * Apply a transformation function to each element in the `SelectList`.
     * The transformation function receives a `Position` based on its current
     * location in the `SelectList`
     */
    map<b>(fn: (element: a, index?: number, position?: Position) => b): SelectListImpl<b>;
    /**
     * @description
     * Add elements to the beginning of the `SelectList`
     */
    prepend(arr: a[]): SelectListImpl<a>;
    /**
     * @description
     * Add elements to the end of the `SelectList`
     */
    append(arr: a[]): SelectListImpl<a>;
    /**
     * @description
     * Returns the entire collection as a single array
     */
    toArray(): a[];
}
/**
 * @description
 * Wraps call to create new instance of a `SelectList`
 */
export default function SelectList<a>(before: a[], selected: a, after: a[]): SelectListImpl<a>;
export {};
